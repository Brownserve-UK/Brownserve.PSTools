---
name: stage-release
on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'The type of release to perform'
        required: true
        default: 'minor'
        type: choice
        options:
          - major
          - minor
          - patch

jobs:
  stage-release:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repo
      - name: checkout-module
        uses: actions/checkout@v3
        with:
          path: Brownserve.PSTools
      # Step 2: Setup commit signing
      # The key used here should be considered "public" as anyone with admin access to the repo can see it
      # and we're using a third-party action to import it. This is fine as the key is only used to sign
      # our staged release commits and not for any other purpose.
      - name: setup-commit-signing
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.AUTOMATED_BUILD_GPG }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          trust_level: 5
          workdir: Brownserve.PSTools
    # Step 3: Call the build script
      - name: run-build-script
        shell: pwsh
        env:
          GitHubPAT: ${{ secrets.AUTOMATED_BUILD_GITHUB_PAT }}
        run: |
            ./Brownserve.PSTools/.build/build.ps1 `
              -BranchName $env:GITHUB_REF `
              -GitHubRepoName 'Brownserve.PSTools' `
              -Build 'StageRelease' `
              -GitHubStageReleaseToken $env:GitHubPAT `
              -ReleaseType '${{ inputs.release_type}}' `
              -UseWorkingCopy `
              -Verbose
    # Step 4: Push a notification to Slack
      - name: notify-slack
        shell: pwsh
        if: ${{ always() }}
        env:
          BUILD_NOTIFICATION_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          BUILD_BRANCH: ${{ github.ref }}
        run: |
            ./Brownserve.PSTools/.build/_init.ps1
            Send-BuildNotification `
              -BuildName ${{ github.job }} `
              -BuildStatus ${{ job.status }} `
              -Webhook $env:BUILD_NOTIFICATION_WEBHOOK `
              -RepoBranch $env:BUILD_BRANCH `
              -RepoName $global:BrownserveRepoName
